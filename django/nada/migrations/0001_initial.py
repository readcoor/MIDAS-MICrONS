# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-08-12 15:56
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import nada.models.neurons
import nada.models.util
import nada.models.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, validators=[nada.models.validators.NameValidator()], verbose_name='Name of the Collection')),
                ('description', models.CharField(blank=True, max_length=4096)),
            ],
            bases=(nada.models.util.NameLookupMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CoordinateFrame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, validators=[nada.models.validators.NameValidator()], verbose_name='Name of the Coordinate reference frame')),
                ('description', models.CharField(blank=True, max_length=4096)),
                ('x_start', models.IntegerField()),
                ('x_stop', models.IntegerField()),
                ('y_start', models.IntegerField()),
                ('y_stop', models.IntegerField()),
                ('z_start', models.IntegerField()),
                ('z_stop', models.IntegerField()),
                ('x_voxel_size', models.FloatField()),
                ('y_voxel_size', models.FloatField()),
                ('z_voxel_size', models.FloatField()),
                ('voxel_unit', models.CharField(choices=[('nanometers', 'NANOMETERS'), ('micrometers', 'MICROMETERS'), ('millimeters', 'MILLIMETERS'), ('centimeters', 'CENTIMETERS')], max_length=100)),
                ('time_step', models.IntegerField()),
                ('time_step_unit', models.CharField(choices=[('nanoseconds', 'NANOSECONDS'), ('microseconds', 'MICROSECONDS'), ('milliseconds', 'MILLISECONDS'), ('seconds', 'SECONDS')], max_length=100)),
            ],
            bases=(nada.models.util.NameLookupMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, validators=[nada.models.validators.NameValidator()], verbose_name='Name of the Experiment')),
                ('description', models.CharField(blank=True, max_length=4096)),
                ('num_hierarchy_levels', models.IntegerField(default=0)),
                ('hierarchy_method', models.CharField(choices=[('near_iso', 'NEAR_ISO'), ('iso', 'ISO'), ('slice', 'SLICE')], max_length=100)),
                ('max_time_sample', models.IntegerField(default=0)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='experiments', to='nada.Collection')),
                ('coord_frame', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='coord', to='nada.CoordinateFrame')),
            ],
            bases=(nada.models.util.NameLookupMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Layer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, validators=[nada.models.validators.NameValidator()], verbose_name='Name of the Layer')),
                ('description', models.CharField(blank=True, max_length=4096)),
                ('is_channel', models.BooleanField()),
                ('base_resolution', models.IntegerField(default=0)),
                ('default_time_step', models.IntegerField(default=0)),
                ('datatype', models.CharField(choices=[('uint8', 'UINT8'), ('uint16', 'UINT16'), ('uint32', 'UINT32'), ('uint64', 'UINT64')], max_length=100)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='layers', to='nada.Experiment')),
            ],
            bases=(nada.models.util.NameLookupMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Neuron',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.BigIntegerField(unique=True)),
                ('cell_type', models.IntegerField(choices=[('unknown', 0), ('excitatory', 1), ('inhibitory', 2)], default=0)),
                ('geometry', django.contrib.gis.db.models.fields.MultiPointField(dim=3, spatial_index=False, srid=0)),
                ('keypoint', django.contrib.gis.db.models.fields.PointField(dim=3, spatial_index=False, srid=0)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='neurons', to='nada.Experiment')),
                ('layer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='neurons', to='nada.Layer')),
            ],
            bases=(nada.models.util.NameLookupMixin, nada.models.neurons.CELIMixin, models.Model),
        ),
        migrations.CreateModel(
            name='NeuronActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.IntegerField()),
                ('value', models.FloatField()),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='nada.Experiment')),
                ('neuron', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity', to='nada.Neuron')),
            ],
            bases=(nada.models.neurons.TimeSeriesMixin, models.Model),
        ),
        migrations.CreateModel(
            name='NeuronStimulus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.IntegerField()),
                ('value', models.IntegerField()),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='nada.Experiment')),
                ('neuron', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stimulus', to='nada.Neuron')),
            ],
            bases=(nada.models.neurons.TimeSeriesMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Synapse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.BigIntegerField(unique=True)),
                ('geometry', django.contrib.gis.db.models.fields.MultiPointField(dim=3, spatial_index=False, srid=0)),
                ('keypoint', django.contrib.gis.db.models.fields.PointField(dim=3, spatial_index=False, srid=0)),
                ('polarity', models.IntegerField(choices=[('unknown', 0), ('pre', 1), ('post', 2), ('bidirectional', 3)], default=0)),
                ('compartment', models.FloatField()),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='synapses', to='nada.Experiment')),
                ('layer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='synapses', to='nada.Layer')),
                ('neuron', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='synapses', to='nada.Neuron')),
                ('partner_neuron', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='partner_synapses', to='nada.Neuron')),
                ('partner_synapse', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='nada.Synapse')),
            ],
            bases=(nada.models.util.NameLookupMixin, nada.models.neurons.CELIMixin, models.Model),
        ),
        migrations.AlterUniqueTogether(
            name='neuronstimulus',
            unique_together=set([('neuron', 'experiment', 'time')]),
        ),
        migrations.AlterUniqueTogether(
            name='neuronactivity',
            unique_together=set([('neuron', 'experiment', 'time')]),
        ),
        migrations.AlterUniqueTogether(
            name='layer',
            unique_together=set([('experiment', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='experiment',
            unique_together=set([('collection', 'name')]),
        ),
    ]
